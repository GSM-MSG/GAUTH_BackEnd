spring:
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  jpa:
    database-platform: ${DB_PLATFORM}
    show-sql: true
    hibernate:
      ddl-auto: update

  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER_CLASS}

  cache:
    type: redis
    cache-names:
        - Clients
        - AcceptedUser

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE}
      max-request-size: ${MAX_REQUEST_SIZE}

discord:
  webhook:
    url: ${WEBHOOK_URL}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS}
      secret-key: ${AWS_SECRET}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_BUCKET}
    stack:
      auto: false

messages:
  basename: i18n/exception
  encoding: UTF-8

jwt:
  accessSecret: ${JWT_ACCESS}
  refreshSecret: ${JWT_REFRESH}
  oauthSecret: ${JWT_OAUTH}

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health,info,prometheus

  endpoint:
    health:
      enabled: true

    info:
      enabled: true

    prometheus:
      enabled: true